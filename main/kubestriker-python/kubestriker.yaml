apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubestriker-python
  namespace: kubestriker
  labels:
    app: kubestriker
    release: kubestriker
    component: server
spec:
  # serviceName: "kubestriker-python-svc"
  replicas: 1
  selector:
    matchLabels:
      app: kubestriker
      release: kubestriker
      component: server
      hasDNS: "true"
  template:
    metadata:
      labels:
        app: kubestriker
        release: kubestriker
        component: server
        hasDNS: "true"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app: kubestriker
                  release: "kubestriker"
                  component: server
              topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 60
      # serviceAccountName: consul-dev-server
      volumes:
        - name: kubestriker-python-storage
          emptyDir: {}
      containers:
        - name: kubestriker-python
          image: "cloudsecguy/python:chai"
          env:
            - name: ADVERTISE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: DYNAMODB_URL
              value: http://10.28.3.231:8000
            - name: DYNAMODB_ACCESS_KEY_ID
              value: "anything"
            - name: DYNAMODB_ACCESS_KEY
              value: "anything"
            - name: DYNAMODB_REGION
              value: "ap-southeast-2"
            - name: NEO4J_DB_ENDPOINT
              value: 10.28.4.195
            - name: NEO4J_DB_USER
              value: neo4j
            - name: NEO4J_DB_TOKEN
              value: Test@123
          volumeMounts:
            - name: kubestriker-python-storage
              mountPath: /data
              subPath: data
          ports:
            - name: python-expose
              containerPort: 8888
              protocol: "TCP"
            - name: db-expose
              containerPort: 8000
              protocol: "TCP"
          # livenessProbe:
          #   tcpSocket:
          #     port: 8000
          #   failureThreshold: 2
          #   initialDelaySeconds: 5
          #   periodSeconds: 3
          #   successThreshold: 1
          #   timeoutSeconds: 2
          # readinessProbe:
          #   tcpSocket:
          #     port: 8000
          #   failureThreshold: 2
          #   initialDelaySeconds: 5
          #   periodSeconds: 3
          #   successThreshold: 1
          #   timeoutSeconds: 5